name: Deployment Pipeline

on:
    push:
        branches:
            - main
    pull_request:
          branches: [main]
          types: [opened, synchronize]

jobs:
    simple_deployment_pipeline:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
            - name: Install Dependencies
              run: npm install
            - name: Check Style
              run: npm run eslint
            - name: Build Application
              run: npm run build
            - name: Build Failure Discord Notification
              uses: rjstone/discord-webhook-notify@v2
              if: ${{ failure() }}
              with:
                  webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
                  text: |
                    Build Failed!
                    Repository: ${{ github.repository }}
                    Commit: ${{ github.sha }}
                    Environment: Production
                    Triggered by: ${{ github.actor }}
                  username: 'GitHub Actions Bot'
            - name: Run Tests
              run: npm test
            - name: Install Playwright Browsers
              run: npx playwright install --with-deps
            - name: Run E2E Tests
              run: npm run test:e2e
            - name: Upload Playwright Report
              uses: actions/upload-artifact@v4
              if: ${{ !cancelled() }}
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 30
            - name: Setup Flyctl
              if:  ${{github.event_name == 'push' && !contains(join(github.event.commits.*.message),'#skip')}}
              uses: superfly/flyctl-actions/setup-flyctl@master
            - name: Deploy To Fly.io
              if:  ${{github.event_name == 'push' && !contains(join(github.event.commits.*.message),'#skip')}}
              run: flyctl deploy --remote-only
              env:
                  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    tag_release:
        needs: [simple_deployment_pipeline]
        runs-on: ubuntu-latest
        if:  ${{github.event_name == 'push' && !contains(join(github.event.commits.*.message),'#skip')}}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3
          - name: Create Tag
            id: create_tag
            uses: anothrNick/github-tag-action@1.64.0
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              DEFAULT_BUMP: patch
          - name: Discord Success Notification
            uses: rjstone/discord-webhook-notify@v2
            with:
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
              text: |
                Deployment Succeeded!
                Repository: ${{ github.repository }}
                Commit: ${{ github.sha }}
                Environment: Production
                Deployed by: ${{ github.actor }}
                Version: ${{ steps.create_tag.outputs.new_tag }}
              username: 'GitHub Actions Bot'
    
